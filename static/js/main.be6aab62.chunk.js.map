{"version":3,"sources":["hooks/game-data.ts","components/typer.js","hooks/game-progress.ts","App.js","reportWebVitals.js","index.js"],"names":["useGameData","walker","localStorage","getItem","JSON","parse","err","console","log","listStr","start","list","layers","map","l","layer","start_text","gp","walkerID","SELETED","Allow_key_press","Key_filter","strBegin","TypedReactHooks","getStart","getLayers","el","React","useRef","typed","useState","setLastPressedKey","_walker","getAttribute","diceTime","addNum","rNum","Math","floor","random","useEffect","freshStr","window","addEventListener","handleKeyPressCheck","current","destroy","newStr","options","strings","typeSpeed","backSpeed","cursorChar","fadeOut","shuffle","onComplete","self","Typed","event","handleKeyPress","keyStr","key","toString","reset","indexOf","keyCode","gameProgress","listMap","setItem","stringify","loopData","className","style","whiteSpace","ref","_gameProgress","useGameControl","setGameProgress","setWalker","App","getWalker","loadGame","walkerAttribute","border","STR","DEX","CON","INT","CHA","LUK","id","contribution","boss","colSpan","progress","onClick","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be6aab62.chunk.js","sourcesContent":["\nimport start from '../game-data/start.json';\nimport layers from '../game-data/layers.json';\nimport events from '../game-data/events.json';\nimport boss from '../game-data/boss.json';\nimport craft from '../game-data/craft.json';\n\nconst _gameProgress = {\n  \"start\": \"no\", \n  \"layer\": 0, \n  \"contribution\": 0,\n \"progress\":\"-\",\n \"boss\":\"no\"\n}\nconst _events = {\n  getRandomEvents\n}\nfunction getRandomEvents(diceTime: number,addNum: number){\n    // const rNum = addNum + diceTime * (Math.floor((Math.random()*15)+3))\n    const rNum = addNum +  (Math.floor((Math.random()*15)))\n     if((rNum)>3 && (rNum <=18)){\n        return rNum;\n     }else{\n      if(rNum<=20){\n        return rNum-3;\n      }else{\n        return 20\n      }\n        // getAttribute(diceTime,addNum)\n     }\n}\n\nfunction useGameData() {\n  // localStorage.setItem(\"myWalker\", JSON.stringify(_events))\n  // localStorage.setItem(\"gameProgress\", JSON.stringify(_gameProgress))\n  const getStart = () => {\n    try {\n          // const showStr = start.start_text\n          const listStr= start.list\n          // console.log('gd',listStr)\n          \n          const aFunc = function(){}\n          const bFunc = function(){}\n          const cFunc = function(){}\n          return [listStr, aFunc,bFunc,cFunc]\n        }catch (err) {\n          console.log(\"Error: \", err)\n          throw err\n        }\n    }\n\n    // start.forEach( function(ele){\n    //   // console.log(start.\n    // })\n\n    const pressStart=(event :KeyboardEvent, opFunc: Function)=>{\n      switch ((event.key).toString()) {\n        case \"a\":\n            // console.log(ele.pre_text)\n            // console.log(ele.start_text)\n            // console.log(ele.id)\n            break;\n        case \"b\":\n            console.log(\"i am b touched\")\n            break;\n        case \"c\":\n            console.log(\"i am c touched\")\n            break;\n        default :\n            console.log(\"\")   \n        }                                       \n    \n    }\n  \nconst getBoss = (walkerID:string) => {\n  try {\n      localStorage.getItem(\"walkerName\",)\n        console.log(\"walkerID: \", walkerID)\n        return walkerID\n      } catch (err) {\n        console.log(\"Error: \", err)\n        throw err\n      }\n}\nconst getLayers = () => {\n  try {\n      // const showStr = start.start_text\n      const listMap= layers.map(l=>({layer:l.layer,start_text:l.start_text}))\n      // console.log('gd',listStr)\n      \n      // const aFunc = function(){}\n      // const bFunc = function(){}\n      // const cFunc = function(){}\n      return [listMap]\n    }catch (err) {\n      console.log(\"Error: \", err)\n      throw err\n    }\n}\nconst getEvents = (gp: typeof _gameProgress) => {\n  try {\n      // const showStr = start.start_text\n      const listStr= start.list\n      // console.log('gd',listStr)\n      \n      const aFunc = function(){}\n      const bFunc = function(){}\n      const cFunc = function(){}\n      return [listStr, aFunc,bFunc,cFunc]\n    }catch (err) {\n      console.log(\"Error: \", err)\n      throw err\n    }\n}\nconst getCraft = () => {\n  try {\n      const walker = localStorage.getItem(\"myWalker\")\n        // console.log(\"data: \", walker)\n        return JSON.parse(walker!)\n      } catch (err) {\n        console.log(\"Error: \", err)\n        throw err\n      }\n  }\nreturn [getCraft, getStart, getLayers, getEvents, getBoss] as const\n}\n\nexport default useGameData\n","import React, { useEffect, useRef, useState } from 'react';\nimport Typed from 'typed.js';\nimport useGameData from \"../hooks/game-data\"\n\n// import packageD from '../game-data/package-base.json';\n\nlet SELETED = false\nlet Allow_key_press = false\nlet Key_filter = [\"a\",\"b\",\"c\"]\n// interface property {str: string[]}\n// const props\nconst strBegin = [\n    '`当你结束了一天疲惫的工作回到独居的家中，`<br/>`打开家门却意外地发现自己的爱犬 *DogName `<br/>`没有像往常一样晃着尾巴出现在门口迎接你。`<br/>`只见地上留了一张质地很古怪的便签：`<br/>很抱歉没办法提前告知，<br/>但哈迪斯大人要求我尽快将*DogName带回冥界。<br/>如您对此有任何意见，欢迎您拜访以下地址与哈迪斯大人当面沟通…… <br/>——塔纳托斯 <br/><font color=\"gray\">按 q退出游戏 空格键继续游戏 </font>^1000',\n  ]\nconst TypedReactHooks = () => {\n\n  const [getCraft, getStart, getLayers, getEvents, getBoss] = useGameData()\n\tconst el = React.useRef(null);\n\tconst typed = React.useRef(null);\n  \n    // const [fetchWalkerName] = useWalker({ web3 })\n    const [lastPressedKey, setLastPressedKey] = useState()\n    const [ele, setEle] = useState()\n    // \"1.STR力量：3D6 （3-18）\n    // 2.DEX敏捷：3D6 （3-18）\n    // 3.CON体质：3D6 （3-18）\n    // 4.INT智力：3D6 （3-18）\n    // 5.CHA魅力：3D6 （3-18）\n    // 6.LUK运气：3D6 （3-18）\"\n    const _walker = {\n        \"STR\": getAttribute(3,6),\n        \"DEX\": getAttribute(3,6),\n        \"CON\": getAttribute(3,6),\n        \"INT\": getAttribute(3,6),\n        \"CHA\": getAttribute(3,6),\n        \"LUK\": getAttribute(3,6),\n    }\n\n    function getAttribute(diceTime,addNum){\n        const rNum = addNum + diceTime * (Math.floor((Math.random()*3)))\n         if((rNum)>3 && (rNum <=18)){\n            return rNum;\n         }else{\n            getAttribute(diceTime,addNum)\n         }\n    }\n    const [walker, setWalker] = useState(_walker)\n    const [currentStr, setCurrentStr] = useState(strBegin)\n    const handleFetch = async () => {\n        // fetchWalkerName(walkerID).then(setWalker).catch(showAppMsg)\n      }\n  React.useEffect(() => {\n    // const options = {\n    // // strings : getCurrentStr(),\n    // strings : strBegin,\n    // typeSpeed: 30,\n    // backSpeed: 0,\n    // cursorChar: '_',\n    // fadeOut: true,\n    // shuffle: true,\n    // };\n    freshStr(strBegin)\n    \n    // typed.current = new Typed(el.current, options);\n    window.addEventListener(\"keydown\", handleKeyPressCheck);\n\n    return () => {\n      typed.current.destroy();\n    }\n  }, [])\n\n  const HandleCurrentStr = ()=>{\n    setCurrentStr()\n  }\n\n  function freshStr(newStr){\n    const options = {\n        // strings : getCurrentStr(),\n        strings : newStr,\n        typeSpeed: 30,\n        backSpeed: 0,\n        cursorChar: '_',\n        fadeOut: true,\n        shuffle: true,\n        onComplete: function(self) {Allow_key_press= true},\n        };\n        \n        typed.current = new Typed(el.current, options);\n        return typed.current\n\n  }\n\n  \n  const handleKeyPressCheck = (event) => {\n    if(Allow_key_press){\n      handleKeyPress(event)\n    }else{\n      console.log(\"Not allow key press now\")\n    }\n  };\n\n  const handleKeyPress = (event) => {\n    const keyStr = (event.key).toString()\n    setLastPressedKey(event.key);\n    if(keyStr==='q'){\n        typed.current.destroy()\n        typed.current = freshStr([\"你按下了Q\",\"退出游戏^1500\"])\n        typed.current.reset()\n        return null\n    }else{\n        console.log(\"continue game\")\n        const keyIn = Key_filter.indexOf(keyStr)\n        if((keyIn>=0)||(event.keyCode===32)){\n          // console.log(\"enter\",keyIn)\n          typed.current.destroy() \n          loopData(event)         \n        }else{\n          // loopData(event) \n        }\n    } \n  };\n  \n  function loopData(event){\n    console.log(\"loop in\")\n    const gameProgress = JSON.parse(localStorage.getItem(\"gameProgress\"))\n    // console.log('progress:',gameProgress)\n    const listMap = getLayers()\n    // console.log(listMap)\n    \n    if((gameProgress.start==='no')&& (SELETED===false)){\n        const [listStr] = getStart()\n        freshStr(listStr)\n      switch ((event.key).toString()) {\n        case \"a\":\n            console.log('you pressed ',event.key)\n            SELETED = true\n            freshStr([\"你选择了a，不准备开启一段为小狗的冒险，游戏结束\"])\n           localStorage.setItem(\"gameProgress\",JSON.stringify({  \"start\": \"yes\", \n           \"layer\": 1, \n           \"contribution\": 0,\n          \"progress\":\"-\",\n          \"boss\":false}))\n           console.log('after select',localStorage.getItem(\"gameProgress\"))\n            break;\n        case \"b\":\n            console.log(\"i am b touched\")\n            SELETED = true\n            freshStr([\"你选择了b，你装备了你的帽子和风衣，冒险开始了\"])\n            localStorage.setItem(\"gameProgress\",JSON.stringify({  \"start\": \"yes\", \n            \"layer\": 1, \n            \"contribution\": 0,\n           \"progress\":\"-\",\n           \"boss\":false}))\n            console.log('after select',localStorage.getItem(\"gameProgress\"))          \n            break;\n        case \"c\":\n            console.log(\"i am c touched\")\n            SELETED = true\n            freshStr([\"你选择了c，你无暇顾及背包，直接上路开始冒险了\"])\n            localStorage.setItem(\"gameProgress\",JSON.stringify({  \"start\": \"yes\", \n            \"layer\": 1, \n            \"contribution\": 0,\n           \"progress\":\"-\",\n           \"boss\":false}))\n            console.log('after select',localStorage.getItem(\"gameProgress\"))          \n            break;\n        default :\n            console.log(\"\")   \n        }    \n    }\n\n      if((gameProgress.start==='yes')&& (SELETED===false)&&(gameProgress.layer===1)){\n        console.log(listMap[0])\n        // freshStr([listMap[0][\"start_text\"]])\n        // let listStra = \"\"\n        // listStr.array.forEach(element => {\n          // listStra = listStra + '<br/>'+element.content\n        // });\n      }      \n      \n    // packageD.forEach(function(ele){\n    //   setEle(ele)\n    //     // console.log(ele)\n    //     console.log(ele.id)\n    //     typed.current.destroy()\n    //     // typed.current = makeStr(i)\n    //     // typed.current = freshStr([\"sdfadf\",\"sdfsdf\"])\n    //     typed.current = freshStr(makeStr(ele))\n    //     typed.current.reset()\n                                       \n    //         }) \n  }\n\n  function nextStr(){\n    //   console.log(packageD.event_count)\n      // console.log(craft[0])\n  }\n\n  return (\n    <div className=\"wrap\">\n      <h1>What the hell?</h1>\n      <div className=\"type-wrap\">\n        <span style={{ whiteSpace: 'pre' }} ref={el} />\n      </div>\n    </div>\n  );\n}\nexport default TypedReactHooks;","\nimport { useState, useEffect } from \"react\";\n\nconst _gameProgress = {\n  \"start\": \"no\", \n  \"layer\": 0, \n  \"contribution\": 0,\n \"progress\":\"-\",\n \"boss\":\"no\"\n}\nconst _walker = {\n    \"STR\": getAttribute(3,6),\n    \"DEX\": getAttribute(3,6),\n    \"CON\": getAttribute(3,6),\n    \"INT\": getAttribute(3,6),\n    \"CHA\": getAttribute(3,6),\n    \"LUK\": getAttribute(3,6),\n}\nfunction getAttribute(diceTime: number,addNum: number){\n    // const rNum = addNum + diceTime * (Math.floor((Math.random()*15)+3))\n    const rNum = addNum +  (Math.floor((Math.random()*15)))\n     if((rNum)>3 && (rNum <=18)){\n        return rNum;\n     }else{\n      if(rNum<=20){\n        return rNum-3;\n      }else{\n        return 20\n      }\n        // getAttribute(diceTime,addNum)\n     }\n}\n\nfunction useGameControl() {\n  const [gameProgress, setGameProgress] = useState(_gameProgress)\n  const [walker, setWalker] = useState(_walker)\n  localStorage.setItem(\"myWalker\", JSON.stringify(_walker))\n  localStorage.setItem(\"gameProgress\", JSON.stringify(_gameProgress))\n\nuseEffect(() => {\n  localStorage.setItem(\"myWalker\", JSON.stringify(_walker))\n  localStorage.setItem(\"gameProgress\", JSON.stringify(_gameProgress))\n  }, [walker,gameProgress])\n\n// const saveGamePoint \n\n// 1.检查是否有game cookie，具体cookie内容（localStorage?)\n// 包括是否访问过、链接过的钱包地址、是否创建过walker、历史walker name等\n// 2.检查是否有localStorage存储的游戏进度\n// walker属性、功勋值、今日可玩次数（体力值）、获得材料\n// const initialUser = () => {\n//     const nowWalker = localStorage.getItem(\"nowWalker\")\n//     if(nowWalker){\n//         console.log(nowWalker)\n//       //   return nowWalker\n//     }else{\n//         console.log(\"no walker\")\n//     }\n//     const nowUser = localStorage.getItem(\"nowUser\")\n//     if(nowUser){\n//       let objUser = JSON.parse(nowUser) \n//       console.log(objUser)\n//       // return objUser\n//   }else{\n//       console.log(\"no user\")\n//   }\n//   const progressRecord = localStorage.getItem(\"progressRecord\")\n//   if(progressRecord){\n//     let objUser = JSON.parse(progressRecord) \n//     console.log(progressRecord)\n//     return [objUser, progressRecord]\n//   }else{\n//       console.log(\"no progress\")\n//   }    \n// }\n\n// 加载本地缓存并显示Walker信息\n// 同时加载最新walker信息，做对比（hash值）是否改变，未改变则不动\n// 改变了则刷新Walker信息\n//需要wasm的游戏引擎开发完成，输出hash验证，和本地hash对比 TODO\n//每次存储，都要向引擎请求一个hash值，存储到本地，因此所有的obj，都要有一个_hash字段 TODO\n// const loadWalker = (walkerID:string) => {\n//   try {\n//       localStorage.getItem(\"walkerName\",)\n//         console.log(\"walkerID: \", walkerID)\n//         return walkerID\n//       } catch (err) {\n//         console.log(\"Error: \", err)\n//         throw err\n//       }\n// }\n\n//存储进度、用户对象\n//   attributes = {'STR':2,'DEX':4,'CON':5,'INT':4,'CHA':3,'LUK':7}\n//   user =[{\"walkerID\":123, \"walkerName\":'player1',\"walkerID\":223, \"attributes\": attributes},\n// {\"walkerID\":123, \"walkerName\":'player1',\"walkerID\":223, \"attributes\": attributes}\n// ]\n// progress = [{\"layer\":1,\"events\":events}, {\"layer\":2,\"events\":events}]\n// events = [{\"id\":1,\"selected\":2}]\n// const saveWalker = (walker:object) => {\n//   try {\n//       localStorage.setItem(\"myWalker\", JSON.stringify(walker))\n//         console.log(\"data: \", walker)\n//       } catch (err) {\n//         console.log(\"Error: \", err)\n//         throw err\n//       }\n// }\nconst saveGame = (gp: typeof _gameProgress) => {\n  if(!gp){\n    gp = JSON.parse(localStorage.getItem(\"gameProgress\")!)\n  }\n  try {\n      localStorage.setItem(\"gameProgress\", JSON.stringify(_gameProgress))\n      setGameProgress(gp)\n        console.log(\"gameProgress to save: \", _gameProgress)\n      } catch (err) {\n        console.log(\"Error: \", err)\n        throw err\n      }\n}\n\nconst loadGame = () => {\n  try {\n      const gp = localStorage.getItem(\"gameProgress\")\n        console.log(\"gameProgress to load: \", gp)\n        return JSON.parse(gp!)\n      } catch (err) {\n        console.log(\"Error: \", err)\n        throw err\n      }\n  }\n\nconst getWalker = () => {\n  try {\n      const walker = localStorage.getItem(\"myWalker\")\n        // console.log(\"data: \", walker)\n        return JSON.parse(walker!)\n      } catch (err) {\n        console.log(\"Error: \", err)\n        throw err\n      }\n  }\nreturn [setWalker, getWalker, saveGame, loadGame] as const\n}\n\nexport default useGameControl\n","import TypedReactHooks from \"./components/typer\"\nimport useGameControl from \"./hooks/game-progress\"\nimport './App.css';\n\nfunction App() {\n  const [setWalker, getWalker,saveGame,loadGame] = useGameControl()\n  const walkerAttribute = getWalker()\n  const gameProgress = loadGame()\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <span><table border=\"1\">\n          <tbody>\n              <tr>\n              <td>STR</td>\n              <td>DEX</td>\n              <td>CON</td>\n              <td>INT</td>\n              <td>CHA</td>\n              <td>LUC</td>                            \n              </tr>\n              <tr>\n              <td>{walkerAttribute.STR}</td>\n              <td>{walkerAttribute.DEX}</td>\n              <td>{walkerAttribute.CON}</td>\n              <td>{walkerAttribute.INT}</td>\n              <td>{walkerAttribute.CHA}</td>\n              <td>{walkerAttribute.LUK}</td>                            \n              </tr>\n          </tbody>              \n              </table>\n        </span>\n      <span id=\"react-root\" className=\"text-white ml-40 mr-40 text-xl font-bold border-8 border-white\">\n      <TypedReactHooks />\n      </span>\n      <span><table border=\"1\">\n            <tbody>\n              <tr>\n              <td>Start</td>\n              <td>Layer</td>\n              <td>Contribution</td>\n              <td>BOSS</td>                           \n              </tr>\n              <tr>\n              <td>{gameProgress.start}</td>\n              <td>{gameProgress.layer}</td>\n              <td>{gameProgress.contribution}</td>\n              <td>{gameProgress.boss}</td>                     \n              </tr>\n              <tr><td>Progress</td><td colSpan={3}>{gameProgress.progress}</td></tr>\n              </tbody>\n            </table>\n        </span>\n        <div>\n        <button onClick={()=>{window.location.reload()}}>Restart</button>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}