{"version":3,"sources":["components/typer.js","hooks/game-progress.ts","App.js","reportWebVitals.js","index.js"],"names":["str","TypedReactHooksDemo","el","React","useRef","typed","useState","setLastPressedKey","setEle","_walker","getAttribute","diceTime","addNum","rNum","Math","floor","random","useEffect","options","strings","typeSpeed","backSpeed","cursorChar","fadeOut","shuffle","current","Typed","window","addEventListener","handleKeyPress","destroy","freshStr","newStr","event","key","toString","reset","console","log","keyCode","packageD","forEach","ele","id","astr","push","start_text","pre_text","makeStr","loopData","className","style","whiteSpace","ref","_gameProgress","useGameControl","walker","setWalker","localStorage","setItem","JSON","stringify","getItem","err","walkerID","gp","App","getWalker","saveGame","loadGame","border","STR","DEX","CON","INT","CHA","LUK","start","layer","contribution","boss","colSpan","progress","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.507dba8b.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Typed from 'typed.js';\nimport packageD from '../game-data/package-base.json';\nimport craft from '../game-data/craft.json';\n\n// interface property {str: string[]}\n// const props\nconst str = [\n    '`当你结束了一天疲惫的工作回到独居的家中，`<br/>`打开家门却意外地发现自己的爱犬 *DogName `<br/>`没有像往常一样晃着尾巴出现在门口迎接你。`<br/>`只见地上留了一张质地很古怪的便签：`<br/>很抱歉没办法提前告知，<br/>但哈迪斯大人要求我尽快将*DogName带回冥界。<br/>如您对此有任何意见，欢迎您拜访以下地址与哈迪斯大人当面沟通…… <br/>——塔纳托斯 <br/><font color=\"gray\">按空格继续游戏 按q退出游戏</font>^2000',\n  ]\nconst TypedReactHooksDemo = () => {\n\tconst el = React.useRef(null);\n\tconst typed = React.useRef(null);\n    // const [fetchWalkerName] = useWalker({ web3 })\n    const [lastPressedKey, setLastPressedKey] = useState()\n    const [ele, setEle] = useState()\n    // \"1.STR力量：3D6 （3-18）\n    // 2.DEX敏捷：3D6 （3-18）\n    // 3.CON体质：3D6 （3-18）\n    // 4.INT智力：3D6 （3-18）\n    // 5.CHA魅力：3D6 （3-18）\n    // 6.LUK运气：3D6 （3-18）\"\n    const _walker = {\n        \"STR\": getAttribute(3,6),\n        \"DEX\": getAttribute(3,6),\n        \"CON\": getAttribute(3,6),\n        \"INT\": getAttribute(3,6),\n        \"CHA\": getAttribute(3,6),\n        \"LUK\": getAttribute(3,6),\n    }\n\n    function getAttribute(diceTime,addNum){\n        const rNum = addNum + diceTime * (Math.floor((Math.random()*6)))\n         if((rNum)>3 && (rNum <=18)){\n            return rNum;\n         }else{\n            getAttribute(diceTime,addNum)\n         }\n    }\n    const [walker, setWalker] = useState(_walker)\n    const [currentStr, setCurrentStr] = useState(str)\n    const handleFetch = async () => {\n        // fetchWalkerName(walkerID).then(setWalker).catch(showAppMsg)\n      }\n  React.useEffect(() => {\n    const options = {\n    // strings : getCurrentStr(),\n    strings : str,\n    typeSpeed: 30,\n    backSpeed: 0,\n    cursorChar: '_',\n    fadeOut: true,\n    shuffle: true,\n    };\n    \n    typed.current = new Typed(el.current, options);\n    window.addEventListener(\"keydown\", handleKeyPress);\n\n    return () => {\n      typed.current.destroy();\n    }\n  }, [])\n\n  const HandleCurrentStr = ()=>{\n    setCurrentStr()\n  }\n\n  function freshStr(newStr){\n    const options = {\n        // strings : getCurrentStr(),\n        strings : newStr,\n        typeSpeed: 30,\n        backSpeed: 0,\n        cursorChar: '_',\n        fadeOut: true,\n        shuffle: true,\n        };\n        \n        typed.current = new Typed(el.current, options);\n        return typed.current\n  }\n\n  function makeStr(ele){\n    // console.log(\"makeStr\",ele)\n    // freshStr([packageD[i].list[0],packageD[i].list[1],packageD[i].list[2]])\n    const astr = []\n    astr.push(ele.start_text)\n    astr.push(ele.pre_text)\n    // ele.list.forEach(function (item){astr.push(item)})\n    console.log(astr)\n    return astr\n  }\n\n  const handleKeyPress = (event) => {\n      //check which event id now\n    //   console.log(\"pack\",packageD.length)\n    // console.log(event.keyCode);\n    setLastPressedKey(event.key);\n    // console.log(\"Now\",walker)\n    if((event.key).toString()==='q'){\n        // console.log(\"End game\",walker)\n        typed.current.destroy()\n        typed.current = freshStr([\"你按下了Q\",\"退出游戏^1500\"])\n        typed.current.reset()\n        \n    }else{\n        console.log(\"continue game\")\n        if(event.keyCode==32){typed.current.destroy()}  \n        loopData(event) \n    } \n  };\n  \n  function loopData(event){\n    packageD.forEach(function(ele){\n      setEle(ele)\n        // console.log(ele)\n        console.log(ele.id)\n        typed.current.destroy()\n        // typed.current = makeStr(i)\n        // typed.current = freshStr([\"sdfadf\",\"sdfsdf\"])\n        typed.current = freshStr(makeStr(ele))\n        typed.current.reset()\n        switch ((event.key).toString()) {\n            case \"a\":\n                // console.log(ele.pre_text)\n                // console.log(ele.start_text)\n                console.log(ele.id)\n                break;\n            case \"b\":\n                console.log(\"i am b touched\")\n                break;\n            case \"c\":\n                console.log(\"i am c touched\")\n                break;\n            default :\n                console.log(\"\")   \n            }                                       \n            }) \n  }\n\n  function nextStr(){\n    //   console.log(packageD.event_count)\n      console.log(craft[0])\n  }\n\n  return (\n    <div className=\"wrap\">\n      <h1>What the hell?</h1>\n      <div className=\"type-wrap\">\n        <span style={{ whiteSpace: 'pre' }} ref={el} />\n      </div>\n      {/* <button onClick={nextStr()}>get data</button><br /> */}\n      {/* <button onClick={() => typed.current.toggle()}>Toggle</button>\n      <button onClick={() => typed.current.start()}>Start</button>\n      <button onClick={() => typed.current.stop()}>Stop</button>\n      <button onClick={() => typed.current.reset()}>Reset</button>\n      <button onClick={() => typed.current.destroy()}>Destroy</button> */}\n    </div>\n  );\n}\nexport default TypedReactHooksDemo;","\nimport { useState, useEffect } from \"react\";\n\nconst _gameProgress = {\"start\": false, \"layer\": 0, \"contribution\": 0,\n \"progress\":\"-\",\"boss\":false\n}\nconst _walker = {\n    \"STR\": getAttribute(3,6),\n    \"DEX\": getAttribute(3,6),\n    \"CON\": getAttribute(3,6),\n    \"INT\": getAttribute(3,6),\n    \"CHA\": getAttribute(3,6),\n    \"LUK\": getAttribute(3,6),\n}\nfunction getAttribute(diceTime: number,addNum: number){\n    const rNum = addNum + diceTime * (Math.floor((Math.random()*6)))\n     if((rNum)>3 && (rNum <=18)){\n        return rNum;\n     }else{\n        getAttribute(diceTime,addNum)\n     }\n}\n\nfunction useGameControl() {\n  const [gamePoint, setGamePoint] = useState(_gameProgress)\n  const [walker, setWalker] = useState(_walker)\n  localStorage.setItem(\"myWalker\", JSON.stringify(_walker))\n//   const connect = async () => {\n//     setWeb3(web3)\n//     console.log(web3)\n//   }\n//   return  connect\n\nuseEffect(() => {\n  localStorage.setItem(\"myWalker\", JSON.stringify(_walker))\n  }, [walker])\n\n// const saveGamePoint \n\n// 1.检查是否有game cookie，具体cookie内容（localStorage?)\n// 包括是否访问过、链接过的钱包地址、是否创建过walker、历史walker name等\n// 2.检查是否有localStorage存储的游戏进度\n// walker属性、功勋值、今日可玩次数（体力值）、获得材料\n// const initialUser = () => {\n//     const nowWalker = localStorage.getItem(\"nowWalker\")\n//     if(nowWalker){\n//         console.log(nowWalker)\n//       //   return nowWalker\n//     }else{\n//         console.log(\"no walker\")\n//     }\n//     const nowUser = localStorage.getItem(\"nowUser\")\n//     if(nowUser){\n//       let objUser = JSON.parse(nowUser) \n//       console.log(objUser)\n//       // return objUser\n//   }else{\n//       console.log(\"no user\")\n//   }\n//   const progressRecord = localStorage.getItem(\"progressRecord\")\n//   if(progressRecord){\n//     let objUser = JSON.parse(progressRecord) \n//     console.log(progressRecord)\n//     return [objUser, progressRecord]\n//   }else{\n//       console.log(\"no progress\")\n//   }    \n// }\n\n// 加载本地缓存并显示Walker信息\n// 同时加载最新walker信息，做对比（hash值）是否改变，未改变则不动\n// 改变了则刷新Walker信息\n//需要wasm的游戏引擎开发完成，输出hash验证，和本地hash对比 TODO\n//每次存储，都要向引擎请求一个hash值，存储到本地，因此所有的obj，都要有一个_hash字段 TODO\nconst loadWalker = (walkerID:string) => {\n  try {\n      localStorage.getItem(\"walkerName\",)\n        console.log(\"data: \", walkerID)\n        return walkerID\n      } catch (err) {\n        console.log(\"Error: \", err)\n        throw err\n      }\n}\n\n//存储进度、用户对象\n//   attributes = {'STR':2,'DEX':4,'CON':5,'INT':4,'CHA':3,'LUK':7}\n//   user =[{\"walkerID\":123, \"walkerName\":'player1',\"walkerID\":223, \"attributes\": attributes},\n// {\"walkerID\":123, \"walkerName\":'player1',\"walkerID\":223, \"attributes\": attributes}\n// ]\n// progress = [{\"layer\":1,\"events\":events}, {\"layer\":2,\"events\":events}]\n// events = [{\"id\":1,\"selected\":2}]\n// const saveWalker = (walker:object) => {\n//   try {\n//       localStorage.setItem(\"myWalker\", JSON.stringify(walker))\n//         console.log(\"data: \", walker)\n//       } catch (err) {\n//         console.log(\"Error: \", err)\n//         throw err\n//       }\n// }\nconst saveGame = (gp: typeof _gameProgress) => {\n  try {\n      localStorage.setItem(\"gameProgress\", JSON.stringify(_gameProgress))\n        console.log(\"data: \", _gameProgress)\n      } catch (err) {\n        console.log(\"Error: \", err)\n        throw err\n      }\n}\n\nconst loadGame = () => {\n  try {\n      const gp = localStorage.getItem(\"gameProgress\")\n        console.log(\"data: \", gp)\n        return gp\n      } catch (err) {\n        console.log(\"Error: \", err)\n        throw err\n      }\n  }\n\nconst getWalker = () => {\n  try {\n      const walker = localStorage.getItem(\"myWalker\")\n        // console.log(\"data: \", walker)\n      } catch (err) {\n        console.log(\"Error: \", err)\n        throw err\n      }\n      return walker\n  }\nreturn [setWalker, getWalker, loadWalker,saveGame, loadGame] as const\n}\n\nexport default useGameControl\n","import TypedReactHooksDemo from \"./components/typer\"\nimport useGameControl from \"./hooks/game-progress\"\nimport './App.css';\n\nfunction App() {\n  const [saveWalker, getWalker, loadWalker,saveGame,loadGame] = useGameControl()\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <span><table border=\"1\">\n          <tbody>\n              <tr>\n              <td>STR</td>\n              <td>DEX</td>\n              <td>CON</td>\n              <td>INT</td>\n              <td>CHA</td>\n              <td>LUC</td>                            \n              </tr>\n              <tr>\n              <td>{getWalker().STR}</td>\n              <td>{getWalker().DEX}</td>\n              <td>{getWalker().CON}</td>\n              <td>{getWalker().INT}</td>\n              <td>{getWalker().CHA}</td>\n              <td>{getWalker().LUK}</td>                            \n              </tr>\n          </tbody>              \n              </table>\n        </span>\n      <span id=\"react-root\" className=\"text-white ml-40 mr-40 text-xl font-bold border-8 border-white\">\n      <TypedReactHooksDemo />\n      </span>\n      <span><table border=\"1\">\n            <tbody>\n              <tr>\n              <td>Start</td>\n              <td>Layer</td>\n              <td>Contribution</td>\n              <td>BOSS</td>                           \n              </tr>\n              <tr>\n              <td>{loadGame().start}</td>\n              <td>{loadGame().layer}</td>\n              <td>{loadGame().contribution}</td>\n              <td>{loadGame().boss}</td>                     \n              </tr>\n              <tr><td>Progress</td><td colSpan={3}>{loadGame().progress}</td></tr>\n              </tbody>\n            </table>\n        </span>\n        <div>\n        <button onClick={saveGame()}>Start</button>\n        <button onClick={saveGame()}>Stop</button>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}