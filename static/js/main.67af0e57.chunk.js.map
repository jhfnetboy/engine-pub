{"version":3,"sources":["hooks/useNetwork.ts","components/typer.js","App.js","reportWebVitals.js","index.js"],"names":["useNetwork","str","TypedReactHooksDemo","el","React","useRef","typed","useState","setLastPressedKey","_walker","getAttribute","diceTime","addNum","rNum","Math","floor","random","walker","useEffect","options","strings","typeSpeed","backSpeed","cursorChar","fadeOut","shuffle","current","Typed","window","addEventListener","handleKeyPress","destroy","freshStr","newStr","event","console","log","keyCode","key","toString","reset","packageD","forEach","ele","id","pre_text","start_text","loopData","className","style","whiteSpace","ref","onClick","toggle","start","stop","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67af0e57.chunk.js","sourcesContent":["\nimport { useState } from \"react\";\n\nconst providerOptions = {\n}\n\nfunction useNetwork() {\n  const [web3, setWeb3] = useState()\n\n  const connect = async () => {\n    setWeb3(web3)\n    console.log(web3)\n  }\n\n\n\n  return [{ web3 }, connect] as const\n}\n\nexport default useNetwork\n","import React, { useEffect, useRef, useState } from 'react';\nimport Typed from 'typed.js';\nimport useNetwork from '../hooks/useNetwork.ts';\nimport packageD from '../game-data/package-base.json';\nimport craft from '../game-data/craft.json';\n\n// interface property {str: string[]}\n// const props\nconst str = [\n    '`当你结束了一天疲惫的工作回到独居的家中，`<br/>`打开家门却意外地发现自己的爱犬 *DogName `<br/>`没有像往常一样晃着尾巴出现在门口迎接你。`<br/>`只见地上留了一张质地很古怪的便签：`<br/>很抱歉没办法提前告知，<br/>但哈迪斯大人要求我尽快将*DogName带回冥界。<br/>如您对此有任何意见，欢迎您拜访以下地址与哈迪斯大人当面沟通…… <br/>——塔纳托斯 <br/><font color=\"gray\">按空格继续游戏 按q退出游戏</font>^2000',\n  ]\n\nconst TypedReactHooksDemo = () => {\n\tconst el = React.useRef(null);\n\tconst typed = React.useRef(null);\n    // const [fetchWalkerName] = useWalker({ web3 })\n    const [lastPressedKey, setLastPressedKey] = useState()\n    // \"1.STR力量：3D6 （3-18）\n    // 2.DEX敏捷：3D6 （3-18）\n    // 3.CON体质：3D6 （3-18）\n    // 4.INT智力：3D6 （3-18）\n    // 5.CHA魅力：3D6 （3-18）\n    // 6.LUK运气：3D6 （3-18）\"\n    const _walker = {\n        \"STR\": getAttribute(3,6),\n        \"DEX\": getAttribute(3,6),\n        \"CON\": getAttribute(3,6),\n        \"INT\": getAttribute(3,6),\n        \"CHA\": getAttribute(3,6),\n        \"LUK\": getAttribute(3,6),\n    }\n\n    function getAttribute(diceTime,addNum){\n        const rNum = addNum + diceTime * (Math.floor((Math.random()*6)))\n         if((rNum)>3 && (rNum <=18)){\n            return rNum;\n         }else{\n            getAttribute(diceTime,addNum)\n         }\n    }\n    const [walker, setWalker] = useState(_walker)\n    const [currentStr, setCurrentStr] = useState(str)\n\n    const handleFetch = async () => {\n        // fetchWalkerName(walkerID).then(setWalker).catch(showAppMsg)\n      }\n  React.useEffect(() => {\n    const options = {\n    // strings : getCurrentStr(),\n    strings : str,\n    typeSpeed: 30,\n    backSpeed: 0,\n    cursorChar: '_',\n    fadeOut: true,\n    shuffle: true,\n    };\n    \n    typed.current = new Typed(el.current, options);\n    window.addEventListener(\"keydown\", handleKeyPress);\n\n    return () => {\n      typed.current.destroy();\n    }\n  }, [])\n\n  const HandleCurrentStr = ()=>{\n    setCurrentStr()\n  }\n\n  function freshStr(newStr){\n    const options = {\n        // strings : getCurrentStr(),\n        strings : newStr,\n        typeSpeed: 30,\n        backSpeed: 0,\n        cursorChar: '_',\n        fadeOut: true,\n        shuffle: true,\n        };\n        \n        typed.current = new Typed(el.current, options);\n        return typed.current\n  }\n\n  function makeStr(i){\n    console.log(\"gte\",packageD[i].happen_rate)\n    // freshStr([packageD[i].list[0],packageD[i].list[1],packageD[i].list[2]])\n    return freshStr([\"sdfadf\",\"sdfsdf\"])\n  }\n\n  const handleKeyPress = (event) => {\n      //check which event id now\n    //   console.log(\"pack\",packageD.length)\n    console.log(event.keyCode);\n    setLastPressedKey(event.key);\n    // console.log(\"Now\",walker)\n    if((event.key).toString()=='q'){\n        console.log(\"End game\",walker)\n        typed.current.destroy()\n        typed.current = freshStr([\"你按下了Q\",\"退出游戏^1500\"])\n        typed.current.reset()\n        \n    }else{\n        console.log(\"continue game\")\n        if(event.keyCode==32){typed.current.destroy()}  \n        loopData(event) \n    } \n  };\n  \n  function loopData(event){\n    packageD.forEach(function(ele){\n        console.log(ele)\n        console.log(ele.id)\n        typed.current.destroy()\n        // typed.current = makeStr(i)\n        typed.current = freshStr([\"sdfadf\",\"sdfsdf\"])\n        typed.current.reset()\n        switch ((event.key).toString()) {\n            case \"a\":\n                console.log(ele.pre_text)\n                console.log(ele.start_text)\n                break;\n            case \"b\":\n                console.log(\"i am b touched\")\n                break;\n            case \"c\":\n                console.log(\"i am c touched\")\n                break;\n            default :\n                console.log(\"\")   \n            }                                       \n            }) \n  }\n\n  function nextStr(){\n    //   console.log(packageD.event_count)\n      console.log(craft[0])\n  }\n\n  return (\n    <div className=\"wrap\">\n      <h1>What the hell?</h1>\n\n      <div className=\"type-wrap\">\n        <span style={{ whiteSpace: 'pre' }} ref={el} />\n      </div>\n      {/* <button onClick={nextStr()}>get data</button><br /> */}\n      <button onClick={() => typed.current.toggle()}>Toggle</button>\n      <button onClick={() => typed.current.start()}>Start</button>\n      <button onClick={() => typed.current.stop()}>Stop</button>\n      <button onClick={() => typed.current.reset()}>Reset</button>\n      <button onClick={() => typed.current.destroy()}>Destroy</button>\n    </div>\n  );\n}\nexport default TypedReactHooksDemo;\n// ReactDOM.render(\n// \t<TypedReactHooksDemo />,\n//   document.getElementById('react-root')\n// );","import TypedReactHooksDemo from \"./components/typer\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <span id=\"react-root\" className=\"text-white ml-40 mr-40 text-xl font-bold border-8 border-white\">\n      <TypedReactHooksDemo />\n      </span>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}